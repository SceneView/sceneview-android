material {
    name : view,
    shadingModel : lit,
    blending : transparent,
    doubleSided : true,

    defines : [
        baseColor
    ],

    parameters : [
        // Todo: See if still useful
        // {
        //    type : bool,
        //    name : isViewReady
        // },
        {
            type : float2,
            name : uvOffset
        },
        {
           type : samplerExternal,
           name : viewTexture
        }
    ],

    requires : [
        position,
        uv0
    ]
}

fragment {
    void material(inout MaterialInputs material) {
        prepareMaterial(material);

        vec2 uv = getUV0();

        if (!gl_FrontFacing) {
          uv.x = 1.0 - uv.x;
        }

        // Set offsetUv if we want to invert around an axis.
        // In front facing camera, set uvOffset.x to 1 and uvOffset.y to 0.
        uv.x = uv.x + materialParams.uvOffset.x * (1.0 - 2.0 * uv.x);
        uv.y = uv.y + materialParams.uvOffset.y * (1.0 - 2.0 * uv.y);

        // Todo: See if still useful
        // if (materialParams.isViewReady) {
            material.baseColor = texture(materialParams_viewTexture, uv);
            material.baseColor.rgb = inverseTonemapSRGB(material.baseColor.rgb);
        // } else {
        //    material.baseColor = vec4(0.0);
        // }
    }
}
